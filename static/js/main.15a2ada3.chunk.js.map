{"version":3,"sources":["styles/breakpoints.ts","components/MenuButton/MenuButtonStyle.ts","components/MenuButton/MenuButton.tsx","components/Menu/menuList.ts","components/Menu/MenuStyle.ts","components/Menu/Menu.tsx","styles/CommonStyles.ts","styles/AppStyle.ts","App.tsx","style.ts","index.tsx"],"names":["size","device","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","MenuButtonLink","styled","NavLink","theme","borderRadius","color","colors","defaultHoverFont","withOpacity","MenuButtonText","span","MenuButton","Icon","children","href","activeClassName","to","menuList","id","text","icon","FcSettings","FcConferenceCall","FcTodoList","FcLineChart","FcAreaChart","MenuContainer","ul","MenuItemWrapper","li","Menu","map","item","modalBoxStyle","css","AppContainer","div","SideMenu","aside","MainContent","main","App","primaryFont","active","opacity","values","defColorHexOpacity","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15a2ada3.chunk.js","sourcesContent":["const size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n} as const;\n\nexport const device = {\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n} as const;\n","import { NavLink, NavLinkProps } from \"react-router-dom\";\nimport styled from \"styled-components/macro\";\nimport { device } from \"../../styles/breakpoints\";\n\ninterface MenuButtonLinkProps extends NavLinkProps {\n  color?: string;\n}\n\nexport const MenuButtonLink = styled(NavLink)<MenuButtonLinkProps>`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  padding: 1rem;\n  border-radius: ${({ theme }) => theme.size.borderRadius};\n  justify-content: flex-start;\n  align-items: center;\n  color: inherit;\n  text-decoration: none;\n  transition: background 0.3s ease, box-shadow 0.3s ease, color 0.3s ease;\n\n  &.active {\n    color: ${({ theme, color }) => color || theme.colors.defaultHoverFont};\n    background-color: ${({ theme, color }) => theme.colors.withOpacity(color)};\n    box-shadow: 0 0 2px 2px ${({ theme, color }) => theme.colors.withOpacity(color)};\n  }\n\n  &:hover {\n    color: ${({ theme, color }) => color || theme.colors.defaultHoverFont};\n    background-color: ${({ theme, color }) => theme.colors.withOpacity(color)};\n  }\n\n  &:focus {\n    outline: none;\n    color: ${({ theme, color }) => color || theme.colors.defaultHoverFont};\n    background-color: ${({ theme, color }) => theme.colors.withOpacity(color)};\n  }\n\n  & > svg {\n    min-width: 2.5rem;\n    min-height: 2.5rem;\n    margin-right: 1rem;\n  }\n\n  @media ${device.laptop} {\n    justify-content: center;\n  }\n\n  @media ${device.tablet} {\n    & > svg {\n      margin-right: 0;\n    }\n  }\n`;\n\n// TODO: Добавить аддаптив\nexport const MenuButtonText = styled.span`\n  @media ${device.tablet} {\n    display: none;\n  }\n`;\n","import React from \"react\";\nimport { SvgIconType } from \"../../styles/types\";\nimport { MenuButtonLink, MenuButtonText } from \"./MenuButtonStyle\";\n\ninterface MenuButtonProps {\n  Icon?: SvgIconType;\n  href: string;\n  color?: string;\n}\n\nconst MenuButton: React.FC<MenuButtonProps> = ({\n  Icon, children, href, color,\n}) => {\n  return (\n    <MenuButtonLink color={color} activeClassName=\"active\" to={href}>\n      {Icon && <Icon />}\n      <MenuButtonText>{children}</MenuButtonText>\n    </MenuButtonLink>\n  );\n};\n\nexport { MenuButton };\n","import {\n  FcTodoList,\n  FcConferenceCall,\n  FcSettings,\n  FcLineChart,\n  FcAreaChart,\n} from \"react-icons/fc\";\nimport { SvgIconType } from \"../../styles/types\";\n\nexport interface MenuListItem {\n  id: string;\n  icon?: SvgIconType;\n  href: string;\n  text: string;\n  color?: string;\n}\n\nexport const menuList: MenuListItem[] = [\n  {\n    id: \"myprofile1\",\n    href: \"/myprofile\",\n    text: \"Мой профиль\",\n    icon: FcSettings,\n  },\n  {\n    id: \"myteam1\",\n    href: \"/myteam\",\n    text: \"Моя команда\",\n    icon: FcConferenceCall,\n  },\n  {\n    id: \"dolist1\",\n    href: \"/dolist\",\n    text: \"Запланированные задачи\",\n    icon: FcTodoList,\n  },\n  {\n    id: \"mychart1\",\n    href: \"/mychart\",\n    text: \"Рейтинг в команде\",\n    icon: FcLineChart,\n  },\n  {\n    id: \"worldchart1\",\n    href: \"/worldchart\",\n    text: \"Мировой рейтинг\",\n    icon: FcAreaChart,\n  },\n];\n","import styled from \"styled-components\";\nimport { device } from \"../../styles/breakpoints\";\n\nexport const MenuContainer = styled.ul`\n  display: grid;\n  grid-auto-flow: row;\n  gap: 1rem;\n  padding: 1rem;\n  border-radius: ${({ theme }) => theme.size.borderRadius};\n\n  @media ${device.laptop} {\n    grid-auto-flow: column;\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const MenuItemWrapper = styled.li`\n  list-style: none;\n`;\n","import React from \"react\";\nimport { MenuButton } from \"../MenuButton/MenuButton\";\nimport { menuList } from \"./menuList\";\nimport { MenuContainer, MenuItemWrapper } from \"./MenuStyle\";\n\nconst Menu: React.FC = () => {\n  return (\n    <MenuContainer>\n      {menuList.map((item) => (\n        <MenuItemWrapper key={item.id}>\n          <MenuButton color={item.color} Icon={item.icon} href={item.href}>{item.text}</MenuButton>\n        </MenuItemWrapper>\n      ))}\n    </MenuContainer>\n  );\n};\n\nexport { Menu };\n","import { css } from \"styled-components\";\n\nexport const modalBoxStyle = css`\n  border-radius: ${({ theme }) => theme.size.borderRadius};\n  box-shadow: 0px 4px 16px rgb(42 41 51 / 8%), 0px 8px 24px rgb(63 63 79 / 16%);\n`;\n","import styled from \"styled-components/macro\";\nimport { device } from \"./breakpoints\";\nimport { modalBoxStyle } from \"./CommonStyles\";\n\nexport const AppContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: minmax(auto, 240px) 1fr;\n  gap: 2rem;\n  padding: 0.7rem;\n  min-height: 100vh;\n  min-width: 100%;\n\n  @media ${device.laptop} {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n    grid-template-rows: auto 1fr;\n    font-size: 1.4rem;\n  }\n\n  @media ${device.mobileL} {\n    grid-template-rows: 1fr auto;\n  }\n`;\n\nexport const SideMenu = styled.aside`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  ${modalBoxStyle};\n\n  @media ${device.mobileL} {\n    order: 2;\n  }\n`;\n\nexport const MainContent = styled.main`\n\n`;\n","import React from \"react\";\nimport { Menu } from \"./components/Menu/Menu\";\nimport { AppContainer, MainContent, SideMenu } from \"./styles/AppStyle\";\n\nconst App: React.FC = () => {\n  return (\n    <AppContainer>\n      <SideMenu>\n        <Menu />\n      </SideMenu>\n      <MainContent>sadfsdaf</MainContent>\n    </AppContainer>\n  );\n};\n\nexport { App };\n","import { createGlobalStyle, DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  colors: {\n    primaryFont: \"#333333\",\n    defaultHoverFont: \"#4a6581\",\n    active: \"#a9d1fe82\",\n    withOpacity: (\n      color = theme.colors.defaultHoverFont,\n      opacity = theme.values.defColorHexOpacity,\n    ): string => {\n      return `${color}${opacity}`;\n    },\n  },\n  size: {\n    borderRadius: \"5px\",\n  },\n  values: {\n    defColorHexOpacity: \"12\",\n  },\n};\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    font-size: 1.6rem;\n    font-family: 'Nunito', sans-serif;\n    color: ${theme.colors.primaryFont};\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { App } from \"./App\";\nimport { GlobalStyle, theme } from \"./style\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <App />\n        <GlobalStyle />\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}